import streamlit as st
import pandas as pd
# Title
#st.markdown('Добро пожаловать на платформу LEGPROM!')
#st.title("Добро пожаловать на платформу LEGPROM!!!")
#st.header("Приложение по подбору фабрик")
st.image("image_legprom.jpg", caption=None, width=None, use_column_width=None, clamp=False, channels="RGB", output_format="auto")
st.subheader("Введите необходимые спецификации вашего заказа")

# Selection fields
vid_izdeliya = st.selectbox("Выберите вид изделия: ", ['Одежда', 'Обувь', 'Аксессуары'])
tip_odezhdy = st.multiselect("Выберите тип одежды: ", [
    'Легкая одежда', 'Трикотажная одежда', 'Нательное белье', 'Костюмные изделия',
    'Верхняя демисезонная одежда', 'Домашняя одежда', 'Вязаная одежда', 'Головные уборы', 'Джинсовые изделия',
    'Спецодежда и СИЗ', 'Верхняя зимняя одежда', 'Чулочно-носочные изделия', 'Изделия из кожи',
    'Платочно-шарфовые изделия', 'Перчатки и защита рук', 'Униформа'
])
naznachenie = st.multiselect("Выберите назначение: ", [
    'Повседневная одежда', 'Спортивная одежда', 'Офисная, деловая одежда', 'Форменная одежда',
    'Домашняя одежда', 'Рабочая одежда', 'Медицинская одежда', 'Торжественная уборы', 'Форменная одежда, обмундирование',
    'Образовательные учреждения', 'Религиозная одежда', 'Охота, рыбалка, туризм', 'Национальная одежда',
    'Тактическая одежда', 'Карнавальные костюмы', 'Униформа'
])
pol_i_vozrast = st.multiselect ("Выберите пол и возраст: ", [
    'Женская одежда', 'Мужская одежда', 'Детская одежда', 'Унисекс', 'Подростковая одежда',
    'Одежда для новорожденных'
])  

sezon = st.selectbox ("Выберите сезон: ", ['Всесезон', 'Весна/Осень', 'Зима', 'Лето'
                                        ])  

cenovoi_segment = st.multiselect ("Выберите ценовой сегмент: ", [
    'Средний', 'Средний Плюс', 'Эконом', 'Премиум'
])    

zakazchik_predostavit = st.multiselect ("Заказчик предоставит:", [
    'Фото изделия', 'Лекала', 'Материалы', 'Образец', 'Ткань', 'Фурнитура',
    'Упаковка', 'Готовый крой', 'Сырье', 'Техническое описание', 'Технический рисунок', 'Художественный эскиз'
])    

konstruirovanie = st.multiselect ("Конструирование: ", [
    'Разработка лекал', 'Доработка модели', 'Лекала фабрики', 'Не требуется'
])

vidy_naneseniya = st.multiselect ("Выберите виды нанесения:", [
    'Вышивка', 'Шелкография', 'Лента', 'Бирка', 'Штамп', 'Рисунки и печать',
    'Тиснение', 'Дтф', 'Шелкография'
])   

trebovaniya_k_oborudovaniyu = st.multiselect ("Выберите требования к оборудованию:", [
    'Станки для проклеивания швов', 'Раскройный стол от пяти метров', 'Пятинитка', 'Петельная машина с прямой петлёй',
    'Пуговичная машина с приспособлением для пуговиц на ножке', 'Закрепочная машинка',
    'Двухиголка', 'Автоматический обрез липучки', 'Машинка для венгерки', 'Четырехниточный оверлок',
    'Распошивалка', 'Прямострочка', 'Прямая петля', 'Пуговичная машина'
])  

regiony_proizvodstva = st.multiselect ("Выберите регионы производства:", [
'Москва и МО ', 
"Ивановская область",     
"Санкт-Петербург и ЛО",                 
"Новосибирская область",               
"Краснодарский край",                  
"Нижегородская область",               
"Алтайский край",                      
"Кировская область",                   
"Липецкая область",                    
"Пермский край",                       
"Ростовская область",                 
"Саратовская область",                  
"Республика Марий Эл",                  
"Омская область",                      
"Пензенская область",                  
"Свердловская область",                
"Самарская область",                    
"Волгоградская область",                
"Тульская область",                     
"Красноярский край",                   
"Воронежская область",                  
"Республика Башкортостан",              
"Республика Татарстан",                 
"Орловская область",                    
"Кемеровская область",                 
"Иркутская область",                    
"Оренбургская область",                 
"Республика Чувашия",                   
"Владимирская область",                
"Ярославская область",                 
"Республика Коми",                      
"Республика Удмуртия",                  
"Брянская область",                    
"Астраханская область",                 
"Тамбовская область",                  
"Кыргызстан",                          
"Курская область",                      
"Костромская область",                 
"Челябинская область",                  
"Смоленская область",                   
"Приморский край",                      
"Псковская область",                    
"Ставропольский край",                  
"Республика Бурятия",                   
"Калининградская область",             
"Республика Крым и Севастополь",       
"Новгородская область",                      
"Тюменская область",                    
"Рязанская область",                   
"Курганская область",                  
"Республика Мордовия",                  
"Еврейская автономная область",         
"Томская область",                      
"Узбекистан",                           
"Белгородская область",                      
"Республика Карелия",                   
"Ульяновская область"                  

])  
budjet = st.text_area("Укажите бюджет:")

dopuslugi = st.multiselect ("Дополнительные услуги:",["Подбор материалов", "Подбор расцветки", "ВТО", "Честный знак", "Подбор поставщика",
            "Подбор ткани", "ОТК"])
sertificaciya = st.selectbox("Сертификация:", ["Обычная одежда, не требует обязательной сертификации",
"Спецодежда и СИЗ, требующие обязательную сертификацию"])

upakovka = st.multiselect ("Требуется ли упаковка:", ['Да', 'Нет'])

obrazec = st.multiselect ("Требуется ли отшить образцы:", ['Да', 'Нет'])

probnaya_partiya = st.text_area("Пробная партия. Укажите количество единиц товара:")

oplata = st.multiselect("Условия оплаты:", ["100% предоплата", "Аванс 30%", "Аванс 50%", "Аванс 70%", 
                                            "Безналичная оплата", "Счёт без НДС",
                                        "Наличная оплата","Требуется отсрочка платежа"])


nalichie_v_reestre = st.multiselect ("Наличие в реестре Минпромторга:", ['Да', 'Нет'])

shtat = st.text_area("Укажите требования к штату:")

syrie = st.multiselect ("Обеспечение сырьем:", ['Давальческое', 'Закупает фабрика', 'Частично давальческое/фабрики'])

komentariy = st.text_area("Комментарий к заказу:")
# Other specifications that user might have to fill
# For example, material, quantity, sizes etc. can be added here similarly
# ...
# A button to confirm the order
#if st.button('Собрать заказ'):
order_details = {
        "Вид изделия": vid_izdeliya if vid_izdeliya else "",
        "Тип одежды": ', '.join(tip_odezhdy) if tip_odezhdy else "", # check if any type is selected
        "Назначение": ', '.join(naznachenie) if naznachenie else "",
        "По полу и возрасту": ', '.join(pol_i_vozrast) if pol_i_vozrast else "",
        "Сезон": sezon if sezon else "",
        "Ценовой сегмент": ', '.join(cenovoi_segment) if cenovoi_segment else "",
        "Виды нанесения": ', '.join(vidy_naneseniya) if vidy_naneseniya else "",
        "Заказчик предоставит": ', '.join(zakazchik_predostavit) if zakazchik_predostavit else "",
        "Конструирование": ', '.join(konstruirovanie) if konstruirovanie else "",
        "Требования к оборудованию": ', '.join(trebovaniya_k_oborudovaniyu) if trebovaniya_k_oborudovaniyu else "",
        "Регионы производства": ', '.join(regiony_proizvodstva) if regiony_proizvodstva else "",
        "Бюджет": budjet if budjet else "",
        "Допуслуги": ', '.join(dopuslugi) if dopuslugi else "",
        "Спецификация": sertificaciya if sertificaciya else "",
        "Образец": ', '.join(obrazec) if obrazec else "",
        "Пробная партия":  probnaya_partiya if probnaya_partiya else "",
        "Оплата": oplata if oplata else "",
        "Наличие в реестре Минпромторга":  ', '.join(nalichie_v_reestre) if nalichie_v_reestre else "",
        "Требование к штату": shtat if shtat else "",
        "Обеспечение сырьем": ', '.join(syrie) if syrie else "", 
        "Комментарий к заказу": komentariy if komentariy else ""}
        
st.session_state['order_details'] = order_details
#if 'order_details' in st.session_state:
    #st.write("Содержимое order_details:")
    #st.write(st.session_state['order_details'])

    #st.write("Ваш заказ:")
#for key, value in order_details.items():
    #st.write(f"{key}: {value}")
# Ниже вашего кода, на верхнем уровне (без отступов) должен находиться импорт
from data_pipeline_st import preprocessed_data, run_neural_network
def display_fabric_table(df_predictions):
    result_df = pd.DataFrame(df_predictions)
    # Предполагаем, что в df_predictions уже есть все нужные столбцы, включая 'Степень соответствия'
    st.table(result_df)

if st.button('Обработать данные'):
    if 'order_details' in st.session_state:
        # Используем сохраненные данные для обработки
        result_input, result_add = preprocessed_data(st.session_state['order_details'])
        
        #st.write("Результат предобработки для входа в модель:", result_input, result_add)

        # Перед вызовом модели
        st.write (f"Входные данные для модели: {result_input}") 
        
        st.write (f"Входные данные для добавления к выходному результату: {result_add}")
        # Выполняем обработку данных и получение предсказания модели
        prediction = run_neural_network(result_input, result_add)

        # Сохраняем результаты предсказания для использования в дальнейшем
        st.session_state['prediction'] = prediction

        # Выводим результат обработки данных и результат предсказания в виде таблицы
        st.write("Результат обработки данных:")
        
        # Выводим данные в Streamlit
        st.table(prediction)

        
        #display_fabric_table(prediction)  # Передаем прямо список словарей
    else:
        # Выводим предупреждение, что заказ еще не подтвержден
        st.warning("Пожалуйста, сначала подтвердите детали заказа.")



    # Теперь словарь order_details можно использовать для дальнейших действий, например, для отправки в модель.